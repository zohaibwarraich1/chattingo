services:
    mysql:
        image: mysql:8.0
        container_name: mysql
        expose:
            - "3306"
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        volumes:
            - db-chat-app:/var/lib/mysql
            - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
        networks:
            - chat-app
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "mysql", "-u", "admin", "-P", "3306", "-d", "chattingo_db", "-p${MYSQL_PASSWORD}"]
            interval: 10s
            timeout: 10s
            retries: 3
            start_period: 20s
    
    backend:
        build: ./backend
        container_name: backend-container
        ports:
            - "8080:8080"
        networks:
            - chat-app
        environment:
            JWT_SECRET: ${JWT_SECRET}
            SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
            SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
            SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
            CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
            CORS_ALLOWED_METHODS: ${CORS_ALLOWED_METHODS}
            CORS_ALLOWED_HEADERS: ${CORS_ALLOWED_HEADERS}
            SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
            SERVER_PORT: ${SERVER_PORT}
            WEBSOCKET_ENDPOINT: ${WEBSOCKET_ENDPOINT}
        depends_on:
            - mysql
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8080"]
            interval: 10s
            timeout: 10s
            retries: 3
            start_period: 20s
            
    frontend:
        build: ./frontend
        container_name: frontend-container
        ports:
            - "80:80"
            - "443:443"
        networks:
            - chat-app
        environment:
            REACT_APP_API_URL: ${REACT_APP_API_URL} 
            REACT_APP_WS_URL: ${REACT_APP_WS_URL}
        volumes:
            - ./ssl-certificates/chattingo.zohaibofficial.online/:/etc/letsencrypt/live/chattingo.zohaibofficial.online/:ro
        depends_on:
            - backend
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:80"]
            interval: 10s
            timeout: 10s
            retries: 3
            start_period: 20s

networks:
    chat-app:
        driver: bridge
volumes:
    db-chat-app: